#pragma once

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include <string>

////////////////////////////////////////////////////////////////////////////////
// Forward Declaration
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class Declaration
////////////////////////////////////////////////////////////////////////////////
namespace TabGraph::SG::Component {
class Name {
public:
    Name() {
        std::memset(_value, 0, sizeof(_value));
    };
    Name(const Name& a_Other) {
        std::memcpy(_value, a_Other._value, sizeof(_value));
    }
    Name(const std::string& a_Value) : Name() {
        std::strncpy(_value, a_Value.c_str(), max_size());
    }
    constexpr size_t max_size() {
        return 256;
    }
    operator std::string () {
        return std::string(_value);
    }

private:
    char _value[256];
};
}