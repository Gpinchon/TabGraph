#pragma once

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include <SG/Core/Property.hpp>

#include <glm/glm.hpp>
#include <glm/ext/quaternion_float.hpp>

#include <SG/Common.hpp>

////////////////////////////////////////////////////////////////////////////////
// Forward Declaration
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class Declaration
////////////////////////////////////////////////////////////////////////////////
namespace TabGraph::SG::Component {
struct Transform {
    PROPERTY(glm::vec3, Position, 0);
    PROPERTY(glm::vec3, Scale, 0);
    PROPERTY(glm::quat, Rotation, glm::vec3(0.0, 0.0, 0.0));
    
    PROPERTY(glm::mat4, LocalTranslationMatrix, );
    PROPERTY(glm::mat4, LocalRotationMatrix, );
    PROPERTY(glm::mat4, LocalScaleMatrix, );

    PROPERTY(glm::vec3, Forward, Common::Forward());
    PROPERTY(glm::vec3, Right, Common::Forward());
    PROPERTY(glm::vec3, Up, Common::Forward());
};
}