#pragma once

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////
#include <SG/Core/Inherit.hpp>
#include <SG/Texture/Texture.hpp>

#include <glm/vec2.hpp>

////////////////////////////////////////////////////////////////////////////////
// Forward declarations
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Defines
////////////////////////////////////////////////////////////////////////////////
#define MIPMAPNBR(size) int((size.x <= 0 && size.y <= 0) ? 0 : floor(log2(std::max(size.x, size.y))))

////////////////////////////////////////////////////////////////////////////////
// Class declaration
////////////////////////////////////////////////////////////////////////////////
namespace TabGraph::SG {
class Texture2D : public Inherit<Texture, Texture2D> {
public:
    PROPERTY(bool, Compressed, false);
    PROPERTY(float, CompressionQuality, 1);
    PROPERTY(glm::ivec2, Size, 0, 0);
public:
    Texture2D() : Inherit(Texture::Type::Texture2D) {};
};
}
